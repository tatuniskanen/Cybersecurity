This was a simple scripting task to communicate with a server using netcat. Made with Bash.
The goal was to find the right combination of numbers to send and get the answer. Upon failure the server tells you the right number you missed.
My solution involved sending numbers from a text file through a fifo pipe using a loop, and adding new numbers to the text file iteratively.
There are other ways to do this, but this is the one I came up with.
My solution is the following script:

#! /bin/bash

arr=()
mapfile -t arr < /home/kali/scripts/vars.txt
end=$((SECONDS+900))   # timed loop because end condition unclear

while [ $SECONDS -lt $end ]; do
 var=0
 lost=false		
 sent=false
 
 nc numb3rs.thenixuchallenge.com 1337 < /tmp/tmp.qhS32Q4cEL/fifoout > /home/kali/scripts/back.txt &
 ncpid=$!  # PID for later

 exec 3> /tmp/tmp.qhS32Q4cEL/fifoout

 sleep 1
 echo ${arr[$var]} >&3

	while [ $lost = false ]; do			
		if [ $((${#arr[@]} - 1 )) -gt $var ]; then 	
			sleep .3
			let "var++"
			echo ${arr[$var]} >&3
		
		elif [ $sent = false ]; then
			sleep .3
			echo ${arr[$var]} >&3
			sent=true
		
		else
			sleep 1.5
			newnumber=`tail -n 2 /home/kali/scripts/back.txt | head -n 1`
			arr+=($newnumber)	
			lost=true			 
		fi
	done 	
	
 kill $ncpid
 exec 3>&-
 sleep 0.5
done

kill $ncpid
exec 3>&-
printf "%s\n" "${arr[@]}" > /home/kali/scripts/vars.txt
